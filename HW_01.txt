'number' + 3 + 3          // "number33" - JS почне зліва на право."number" сприйме як рядок і трійку конвертує два рвзи в рядок

null + 3                  // "3"        - у випадку арифметичних операцій з числовими значеннями, null автоматично конвертується в 0 і додати трійку

5 && "qwerty"             // "qwerty"   - поверне останнє значення, яке використовується для перевірки, якщо обидва правдиві 

+'40' + +'2' + "hillel"   // "42hillel" - JS "+" перед строкою конвертує в числове значення і додає арефмитичну дію до строки

'10' - 5 === 6;           // "false"    - вираз через знак "-" конвертується в арефмитичну дію. "5" не дорівнює "6"

true + false              // "1"        - булеве значення (true і false), true перетворюється в 1, а false - в 0. Тому true + false буде 1 + 0, результатом буде 1

'4px' - 3                 // "NaN"      - JS намагається перетворити "4xp" в рядок, але це не можливо, тому повертає NaN (Not-a-Number)

'4' - 30                  // "-26"      - весь вираз конвертується в арефмитичну дію

'6' + 3 ** 0;             // "61"       - три підноситься у нульову ступінь = 1, далі вираз конвертується в строку

12 / '6'                  // "2"        - "/" працює лише з числами, вираз конвертується в числовий

'10' + (5 === 6);         // "10false"  - (5 === 6) повертає false, решта виразу сприймається як строка        

null == ''                // "false"    - "null" вказує на відсутність значення, '' - пустий рядок. Ці два типи даних не є однаковими

3 ** (9 / 3);             // "27"       - числовий вираз, три підносеться** в ступінь три(9/3)

!!'false' == !!'true'     // "true"     - не дуже зрозуміла з !!"true"

0 || '0' && 1             // "1"        - оператор && має вищий пріоритет, ніж ||, обидва операнди є truthy, && повертає останнє істинне значення, тобто 1 в першій дії повертається 1, і в другій  останнє значення - 1

(+null == false) < 1;     // "false"    - "+null" конвертується у числовий тип, дорівнює 0, 0=="false", який теж =0. Вираз (+null == false) приймає значення true, що = 1. 1 не меньше 1

false && true || true     // "true"     - && повертає перший "неправдивий" операнд, || повертає перше "істинне" значення

false && (false || true)  // "false"    - перша дія робиться в дужках (|| повертає перше "істинне" значення), в другій дії && повертає перший "неправдивий" операнд

(+null == false) < 1 ** 5 // "false"    - (+null == false) перша дія. +null =0, false =0/ Рівняння вірне, true = 1. 1 ** 5 = 1. 1 не може бути меньше 1 